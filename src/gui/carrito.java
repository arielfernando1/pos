package gui;

import java.awt.BorderLayout;
import java.sql.SQLException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static sql.connection.conn;
import static sql.connection.ps;
import sql.metodos;
import internal.reportesPDF;
import java.io.IOException;
import sql.connection;

public final class carrito extends javax.swing.JFrame {

    DefaultTableModel modelo = new DefaultTableModel();
    metodos m = new metodos();
    connection c = new connection();
    reportesPDF rp = new reportesPDF();
    /**
     * Creates new form carrito
     *
     * @throws java.sql.SQLException
     */
    private static carrito obj = null;

    private carrito() throws SQLException, ClassNotFoundException {

        initComponents();
        llenarcliente();
        llenarproducto();
        añadirJable();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        TBidventa.setText(String.valueOf(m.getLast() + 1));
        System.out.print(String.valueOf(m.getColumnCount()));

    }

    public static carrito getObj() throws ClassNotFoundException, SQLException {
        if (obj == null) {
            obj = new carrito();
        }
        return obj;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        CBclientes = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        CBproductos = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTdetalle = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        TBcedula = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        TBidventa = new javax.swing.JTextField();
        TBid = new javax.swing.JTextField();
        SPcantidad = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        JLtotal = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        TBstock = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        JLiva = new javax.swing.JLabel();
        TFsearch = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        CheckFactura = new javax.swing.JCheckBox();
        jSeparator4 = new javax.swing.JSeparator();
        jInternalFrame1 = new javax.swing.JInternalFrame();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CBclientes.setEnabled(false);
        CBclientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CBclientesMouseClicked(evt);
            }
        });
        jPanel1.add(CBclientes, new org.netbeans.lib.awtextra.AbsoluteConstraints(72, 11, 200, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("CLIENTE");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 20));

        CBproductos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CBproductosItemStateChanged(evt);
            }
        });
        jPanel1.add(CBproductos, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 261, -1));

        JTdetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(JTdetalle);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 645, 285));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setText("AÑADIR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 120, 142, -1));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/save.png"))); // NOI18N
        jButton2.setText("GUARDAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 460, 160, 60));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("C.I");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 10, -1, 20));

        TBcedula.setEnabled(false);
        jPanel1.add(TBcedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 10, 132, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("ID_VENTA");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 540, -1, 20));

        TBidventa.setEditable(false);
        jPanel1.add(TBidventa, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 540, 70, -1));

        TBid.setEditable(false);
        jPanel1.add(TBid, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 120, 49, -1));

        SPcantidad.setModel(new javax.swing.SpinnerNumberModel(1, 1, 999, 1));
        jPanel1.add(SPcantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 120, 42, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("TOTAL");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 490, -1, -1));

        JLtotal.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel1.add(JLtotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 460, 70, 60));

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton4.setText("BORRAR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 480, -1, 29));

        TBstock.setEditable(false);
        jPanel1.add(TBstock, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 120, 46, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("12% I.V.A ");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 490, -1, -1));

        JLiva.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel1.add(JLiva, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 460, 60, 60));

        TFsearch.setBackground(new java.awt.Color(204, 204, 204));
        TFsearch.setToolTipText("Presione enter para BUSCAR");
        TFsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TFsearchKeyReleased(evt);
            }
        });
        jPanel1.add(TFsearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 261, -1));

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton3.setText("NUEVO CLIENTE");
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 10, 142, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("CANTIDAD");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 120, -1, -1));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 540, 670, 0));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 530, 670, 10));
        jPanel1.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 670, 10));

        CheckFactura.setText("Generar factura");
        CheckFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckFacturaActionPerformed(evt);
            }
        });
        jPanel1.add(CheckFactura, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, 20));
        jPanel1.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 670, 10));

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel1.add(jInternalFrame1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 270, 150, 120));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        newCliente();
        try {
            llenarcliente();
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(carrito.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed
    private void test() throws SQLException {

        String[] producto = m.getProductData("SILICONA LIQUIDA");
        System.out.print(producto[5]);

    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        removeSelectedRow();
        JLtotal.setText(String.valueOf(calcularTotal()));
        JLiva.setText(String.valueOf(IVA()));
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int confirmar = JOptionPane.showConfirmDialog(this, "¿Desea registrar la venta?");
        if (confirmar == 0) {
            try {
                newVenta();
                JTableToMySQL();
            } catch (SQLException | NullPointerException ex) {
                JOptionPane.showMessageDialog(this, ex);
            } catch (IOException ex) {
                Logger.getLogger(carrito.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Venta cancelada");
        }

    }//GEN-LAST:event_jButton2ActionPerformed
    private void genFact() {

    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if (checkDuplicated() == false) {
            if ("".equals(TBstock.getText())) {
                poblar(m.getCategoryByID(TBid.getText()), TBid.getText(), SPcantidad.getValue().toString(), CBproductos.getSelectedItem().toString(), String.valueOf(m.getPriceByID(TBid.getText())), String.valueOf(calcularSubTotal((int) SPcantidad.getValue(), m.getPriceByID(TBid.getText()))));
                JLtotal.setText(String.valueOf(calcularTotal()));
                JLiva.setText(String.valueOf(IVA()));
                SPcantidad.setValue(1);
            } else if ((int) SPcantidad.getValue() <= Integer.parseInt(TBstock.getText())) {
                poblar(m.getCategoryByID(TBid.getText()), TBid.getText(), SPcantidad.getValue().toString(), CBproductos.getSelectedItem().toString(), String.valueOf(m.getPriceByID(TBid.getText())), String.valueOf(calcularSubTotal((int) SPcantidad.getValue(), m.getPriceByID(TBid.getText()))));
                JLtotal.setText("$ " + String.valueOf(calcularTotal()));
                JLiva.setText("$ " + String.valueOf(IVA()));
                SPcantidad.setValue(1);
            } else {
                JOptionPane.showMessageDialog(this, "No hay suficientes unidades");
            }
        } else {
            JOptionPane.showMessageDialog(this, "El articulo solo se puede añadir una vez, si desea mas unidades especifique en CANTIDAD", "Error Fatal", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void CBproductosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CBproductosItemStateChanged
        try {
            TBid.setText(m.getIDbyName(CBproductos.getSelectedItem().toString()));
            TBstock.setText(m.GetStockByID(TBid.getText()));
        } catch (SQLException ex) {
            Logger.getLogger(carrito.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_CBproductosItemStateChanged

    private void CBclientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CBclientesMouseClicked
        TBcedula.setText(m.getCIByName(CBclientes.getSelectedItem().toString()));
    }//GEN-LAST:event_CBclientesMouseClicked

    private void CheckFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckFacturaActionPerformed

        if (CheckFactura.isSelected()) {
            CBclientes.setEnabled(true);
            TBcedula.setEnabled(true);
            jButton3.setEnabled(true);

        } else {
            CBclientes.setEnabled(false);
            TBcedula.setEnabled(false);
            jButton3.setEnabled(false);

        }


    }//GEN-LAST:event_CheckFacturaActionPerformed

    private void TFsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TFsearchKeyReleased
        try {
            // TODO add your handling code here:
            llenarproducto();
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(carrito.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_TFsearchKeyReleased
    private void poblar(String cat, String id, String cantidad, String detalle, String vunit, String subt) {
        String[] rowData = {cat, id, cantidad, detalle, vunit, subt};
        modelo.addRow(rowData);
    }

    private boolean checkDuplicated() {
        boolean is = false;
        for (int i = 0; i < JTdetalle.getRowCount(); i++) {
            if (JTdetalle.getValueAt(i, 1).equals(TBid.getText())) {
                is = true;
            }
        }
        return is;
    }

    private void Frame() {
        JFrame summary = new JFrame("Summary");
        JButton bt1 = new JButton("Resumen de Transacción");
        JButton bt2 = new JButton("ACEPTAR");
        JLabel lb2 = new JLabel("IVA");
        summary.add(bt1, BorderLayout.NORTH);
        summary.add(bt2, BorderLayout.SOUTH);
        summary.setSize(300, 300);
        summary.setVisible(true);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(carrito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(carrito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(carrito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(carrito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new carrito().setVisible(true);
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(carrito.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    private void añadirJable() {
        JTdetalle.setModel(modelo);
        modelo.addColumn("Categoría");
        modelo.addColumn("ID");
        modelo.addColumn("Cantidad");
        modelo.addColumn("Detalle");
        modelo.addColumn("V.Unit");
        modelo.addColumn("Subtotal");
    }

    private float IVA() {
        float iva = 0;
        iva = (float) (calcularTotal() * 0.12);
        return iva;
    }

    private float calcularSubTotal(int cant, Float precio) {
        float total = cant * precio;
        return total;
    }

    private float calcularTotal() {
        float sum = 0;
        for (int i = 0; i < JTdetalle.getRowCount(); i++) {
            sum = sum + Float.parseFloat((String) JTdetalle.getValueAt(i, 5));
        }
        return sum;
    }

    private void removeSelectedRow() {
        try {
            modelo.removeRow(JTdetalle.getSelectedRow());
            calcularTotal();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "No hay filas seleccionadas");
        }
    }

    @SuppressWarnings("empty-statement")
    private void JTableToMySQL() throws SQLException, IOException {
        String sql = "INSERT INTO detalle_venta(id_venta,idproducto,cant,total,fecha) values(?,?,?,?,?);";
        ps = conn.prepareStatement(sql);
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
        LocalDateTime now = LocalDateTime.now();
        try {
            for (int i = 0; i < JTdetalle.getRowCount(); i++) {
                ps.setInt(1, Integer.parseInt(TBidventa.getText()));
                ps.setInt(2, Integer.parseInt((String) JTdetalle.getValueAt(i, 1)));
                ps.setInt(3, Integer.parseInt((String) JTdetalle.getValueAt(i, 2)));
                ps.setFloat(4, Float.parseFloat((String) JTdetalle.getValueAt(i, 5)));
                ps.setString(5, dtf.format(now));;
                ps.executeUpdate();
            }
            int factura = JOptionPane.showConfirmDialog(this, "Venta registrada correctamente, desea guardar el comprobante?");
            TBidventa.setText(String.valueOf(m.getLast() + 1));
            if (factura == 0) {
                rp.pdfFactura(this, Integer.parseInt(TBidventa.getText()));
            }
        } catch (NumberFormatException | SQLException e) {
            System.out.println(e);
        }
    }

    private void newVenta() {
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
        LocalDateTime now = LocalDateTime.now();
        try {
            String sql = "INSERT INTO reg_venta(id_venta,cedula,fecha) values(?,?,?);";
            ps = conn.prepareStatement(sql);
            ps.setInt(1, Integer.parseInt(TBidventa.getText()));
            ps.setString(2, TBcedula.getText());
            ps.setString(3, dtf.format(now));
            ps.executeUpdate();
        } catch (SQLException | NullPointerException | NumberFormatException e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }

    private void newCliente() {
        String cedula = JOptionPane.showInputDialog("Ingrese la cedula del cliente");
        String nombre = JOptionPane.showInputDialog("Ingrese el nombre del cliente");
        String direccion = JOptionPane.showInputDialog("Ingrese la direccion del cliente");
        String telefono = JOptionPane.showInputDialog("Ingrese el telefono del cliente");
        try {
            String sql = "INSERT INTO cliente VALUES(?,?,?,?);";
            ps = conn.prepareStatement(sql);
            ps.setString(1, cedula);
            ps.setString(2, nombre);
            ps.setString(3, direccion);
            ps.setString(4, telefono);
            ps.executeUpdate();
            JOptionPane.showMessageDialog(this, "El cliente " + nombre + " se agregó correctamente");
        } catch (SQLException | NullPointerException | NumberFormatException e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }

    public void llenarcliente() throws ClassNotFoundException, SQLException {
        CBclientes.removeAllItems();
        ArrayList<String> lista = new ArrayList<>();
        lista = m.fillComboBox("SELECT * FROM cliente ORDER BY nombre_cliente", "nombre_cliente");
        for (int i = 0; i < lista.size(); i++) {
            CBclientes.addItem(lista.get(i));
        }
    }

    private void llenarproducto() throws ClassNotFoundException, SQLException {
        try {
            CBproductos.removeAllItems();
            ArrayList<String> lista = new ArrayList<>();
            lista = m.fillComboBox("SELECT * FROM producto WHERE nombre LIKE '%" + TFsearch.getText() + "%' ORDER BY nombre asc;", "nombre");
            for (int i = 0; i < lista.size(); i++) {
                CBproductos.addItem(lista.get(i));
            }
        } catch (SQLException e) {
            System.out.println(e);
        }
    }

    private void Clear() {
        try {
            while (modelo.getRowCount() > 0) {
                modelo.removeRow(0);
            }
            JLtotal.setText(null);
            JLiva.setText(null);
            SPcantidad.setValue(0);
        } catch (Exception e) {
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CBclientes;
    private javax.swing.JComboBox<String> CBproductos;
    private javax.swing.JCheckBox CheckFactura;
    private javax.swing.JLabel JLiva;
    private javax.swing.JLabel JLtotal;
    private javax.swing.JTable JTdetalle;
    private javax.swing.JSpinner SPcantidad;
    private javax.swing.JTextField TBcedula;
    private javax.swing.JTextField TBid;
    private javax.swing.JTextField TBidventa;
    private javax.swing.JTextField TBstock;
    private javax.swing.JTextField TFsearch;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    // End of variables declaration//GEN-END:variables
}
